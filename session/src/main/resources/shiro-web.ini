#Web环境下的ini配置
[main]
sessionManager=org.apache.shiro.web.session.mgt.ServletContainerSessionManager
securityManager.sessionManager=$sessionManager


sessionListener1=com.github.zhangkaitao.shiro.chapter10.web.listener.MySessionListener1
sessionListener2=com.github.zhangkaitao.shiro.chapter10.web.listener.MySessionListener2
sessionManager.sessionListeners=$sessionListener1,$sessionListener2


#接着配置shiro-web.ini文件：
sessionDAO=org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO  
sessionDAO. activeSessionsCacheName=shiro-activeSessionCache  
sessionManager.sessionDAO=$sessionDAO  
cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager  
cacheManager.cacheManagerConfigFile=classpath:ehcache.xml  
securityManager.cacheManager = $cacheManager

#sessionDAO. activeSessionsCacheName：设置Session缓存名字，默认就是shiro-activeSessionCache；
#cacheManager：缓存管理器，用于管理缓存的，此处使用Ehcache实现；
#cacheManager.cacheManagerConfigFile：设置ehcache缓存的配置文件；
#securityManager.cacheManager：设置SecurityManager的cacheManager，会自动设置实现了CacheManagerAware接口的相应对象，如SessionDAO的cacheManager；

#另外可以通过如下ini配置设置会话ID生成器
sessionIdGenerator=org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator  
sessionDAO.sessionIdGenerator=$sessionIdGenerator
#用于生成会话ID，默认就是JavaUuidSessionIdGenerator，使用java.util.UUID生成。

#Shiro提供了会话验证调度器，用于定期的验证会话是否已过期，如果过期将停止会话；出于性能考虑，
#一般情况下都是获取会话时来验证会话是否过期并停止会话的；但是如在web环境中，如果用户不主动退出是不知道会话是否过期的，
#因此需要定期的检测会话是否过期，Shiro提供了会话验证调度器SessionValidationScheduler来做这件事情。
sessionValidationScheduler=org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler  
sessionValidationScheduler.interval = 3600000  
sessionValidationScheduler.sessionManager=$sessionManager  
sessionManager.globalSessionTimeout=1800000  
sessionManager.sessionValidationSchedulerEnabled=true  
sessionManager.sessionValidationScheduler=$sessionValidationScheduler 

#sessionValidationScheduler：会话验证调度器，sessionManager默认就是使用ExecutorServiceSessionValidationScheduler，其使用JDK的ScheduledExecutorService进行定期调度并验证会话是否过期；
#sessionValidationScheduler.interval：设置调度时间间隔，单位毫秒，默认就是1小时；
#sessionValidationScheduler.sessionManager：设置会话验证调度器进行会话验证时的会话管理器；
#sessionManager.globalSessionTimeout：设置全局会话超时时间，默认30分钟，即如果30分钟内没有访问会话将过期；
#sessionManager.sessionValidationSchedulerEnabled：是否开启会话验证器，默认是开启的；
#sessionManager.sessionValidationScheduler：设置会话验证调度器，默认就是使用ExecutorServiceSessionValidationScheduler。
